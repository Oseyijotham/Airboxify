{"version":3,"file":"static/js/337.0bcb5802.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/TasksPendingList/TasksPendingList.module.css?93e0","components/TasksPendingList/TasksPendingList.jsx","webpack://react-homework-template/./src/components/SortedPendingTasks/SortedPendingTasks.module.css?cc30","components/SortedPendingTasks/icons.svg","components/SortedPendingTasks/SortedPendingTasks.jsx","redux/AppRedux/selectors.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactsSection\":\"TasksPendingList_contactsSection__CqPij\",\"contactsTitle\":\"TasksPendingList_contactsTitle__RZMsU\",\"contactsList\":\"TasksPendingList_contactsList__eTg0L\",\"contactsListAlt\":\"TasksPendingList_contactsListAlt__bBtUA\",\"contactsData\":\"TasksPendingList_contactsData__eWahK\",\"contactsPhone\":\"TasksPendingList_contactsPhone__kq-C-\",\"contactsItemWrapper\":\"TasksPendingList_contactsItemWrapper__vPW+m\",\"contactsItem\":\"TasksPendingList_contactsItem__FNPIO\",\"contactsDetails\":\"TasksPendingList_contactsDetails__N7fJn\",\"contactsName\":\"TasksPendingList_contactsName__QbTXf\",\"checkbox\":\"TasksPendingList_checkbox__wJk3n\",\"contactsButtonArea\":\"TasksPendingList_contactsButtonArea__f01sK\",\"contactsButton\":\"TasksPendingList_contactsButton__XjUHY\",\"navigationArea\":\"TasksPendingList_navigationArea__qKRwx\",\"navigationButton\":\"TasksPendingList_navigationButton__iIIqW\"};","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { selectContacts } from '../../redux/AppRedux/selectors';\nimport {\n  selectContactsFilter,\n  selectFilterUp,\n  selectFilterDown,\n  selectError,\n  selectIsLoading,\n} from '../../redux/AppRedux/selectors';\nimport {\n  deleteContact,\n  openSortedPendingModal,\n  fetchSortedPendingContactById,\n  handleFilterFowardUp,\n  handleFilterFowardDown,\n  handleFilterBackwardUp,\n  handleFilterBackwardDown,\n  updateStatus,\n  openPendingMobileAndTabModal,\n} from '../../redux/AppRedux/operations';\nimport css from './TasksPendingList.module.css';\nexport const TasksPendingList = ({ children }) => {\n  const contacts = useSelector(selectContacts);\n  const filterUp = useSelector(selectFilterUp);\n  const filterDown = useSelector(selectFilterDown);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  //const [taskStatus, setTaskStatus] = useState();\n  //let myContacts  \n  const dispatch = useDispatch();\n  const handleDelete = evt => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 1000);\n    //console.log(evt.target.name);\n    dispatch(deleteContact(evt.target.name));\n    /*//dispatch(closeModal());\n    const exist = contacts.find(contact => contact._id === evt.target.name);\n    console.log(contacts);\n    if (exist === undefined) {\n      console.log('gvghi');\n      dispatch(closeModal());\n    }*/\n    \n  };\n  const filterValue = useSelector(selectContactsFilter);\n\n  const handleModalOpen = (evt) => {\n    if (evt.target.getAttribute('data-id')) {\n      //console.log('Modal opened!');\n\n      const id = evt.currentTarget.getAttribute('data-id');\n      //console.log(id);\n      dispatch(fetchSortedPendingContactById(id));\n      dispatch(openSortedPendingModal());\n       dispatch(openPendingMobileAndTabModal());\n    }\n  };\n  const [lowerLimit, setLowerLimit] = useState(0);\n  const [upperLimit, setUpperLimit] = useState(4);\n\n\n  const handleForward = (evt) => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 500);\n    //let fwdWar = lowerLimit + 4;\n    \n      setLowerLimit(lowerLimit + 4);\n      setUpperLimit(upperLimit + 4);\n    \n    /*if (filterValue !== \"\") {\n      console.log(\"OK\")\n      const str = filterUp;\n      const sto = filterDown\n      dispatch(handleFilterFowardUp(str));\n      dispatch(handleFilterFowardDown(sto));\n    }*/\n  }\n\n  const handleBackward = (evt) => {\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n    //let fwdWar = lowerLimit + 4;\n    \n      setLowerLimit(lowerLimit - 4);\n      setUpperLimit(upperLimit - 4);\n    \n    /*if (filterValue !== '') {\n      const str1 = filterUp;\n      const sto1 = filterDown;\n       dispatch(handleFilterBackwardUp(str1));\n       dispatch(handleFilterBackwardDown(sto1));\n     }*/\n  };\n  \n  const handleChange = (evt) => {\n    dispatch(updateStatus({ status: evt.target.checked, myUpdateStatusId:evt.target.name}));\n  }\n  \n   const bestMatches = contacts.filter(\n     contact =>\n       contact.name.toLowerCase().includes(filterValue.trim().toLowerCase()) &&\n       filterValue.trim() !== ''\n  );\n  \n  const pendingMatches = contacts.filter(\n    contact =>\n      contact.status===false\n  );\n\n  return (\n    <div className={css.contactsSection}>\n      <h3 className={css.contactsTitle}>Pending</h3>\n      {children}\n      {pendingMatches.length === 0 && (\n        <div className={css.contactsListAlt}>\n          {isLoading && !error && (\n            <b className={css.notification}>Loading Tasks...</b>\n          )}\n          {!isLoading && !error && (\n            <b className={css.notification}>No Tasks Here!!!</b>\n          )}\n          {!isLoading && error && (\n            <b className={css.notification}>Error!!!</b>\n          )}\n        </div>\n      )}\n      {pendingMatches.length !== 0 && (\n        <ul className={css.contactsList}>\n          {pendingMatches.map(contact => {\n            const myindex = pendingMatches.indexOf(contact);\n            if (\n              myindex >= lowerLimit &&\n              myindex < upperLimit \n            ) {\n              return (\n                <li\n                  key={contact._id}\n                  data-id={contact._id}\n                  className={css.contactsItem}\n                  onClick={handleModalOpen}\n                >\n                  <span className={css.contactsData} data-id={contact._id}>\n                    <input\n                      type=\"checkbox\"\n                      className={css.checkbox}\n                      checked={contact.status}\n                      name={contact._id}\n                      onChange={handleChange}\n                    />\n                    :{' '}\n                    <span className={css.contactsPhone} data-id={contact._id}>\n                      {contact.name}\n                    </span>\n                  </span>\n                  <span className={css.contactsButtonArea}>\n                    <button\n                      type=\"submit\"\n                      className={css.contactsButton}\n                      name={contact._id}\n                      onClick={handleDelete}\n                    >\n                      Delete\n                    </button>\n                  </span>\n                </li>\n              );\n            }\n          })}\n        </ul>\n      )}\n\n      <div className={css.navigationArea}>\n        {lowerLimit !== 0 && (\n          <button className={css.navigationButton} onClick={handleBackward}>\n            Prev\n          </button>\n        )}\n        {!(upperLimit > pendingMatches.length) &&\n          upperLimit !== pendingMatches.length && (\n            <button className={css.navigationButton} onClick={handleForward}>\n              Forward\n            </button>\n          )}\n      </div>\n\n      {filterValue !== '' && (\n        <div className={css.navigationArea}>\n          {filterDown !== 0 && (\n            <button className={css.navigationButton} onClick={handleBackward}>\n              Prev\n            </button>\n          )}\n          {/*!(filterUp > bestMatches.length) &&\n            filterUp !== bestMatches.length && (\n              <button className={css.navigationButton} onClick={handleForward}>\n                Forward\n              </button>\n            )*/}\n        </div>\n      )}\n    </div>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"notification\":\"SortedPendingTasks_notification__RXfw7\",\"notificationShow\":\"SortedPendingTasks_notificationShow__glMEO\",\"sortedWrapper\":\"SortedPendingTasks_sortedWrapper__+GkAa\",\"coverWrapper\":\"SortedPendingTasks_coverWrapper__4NC-O\",\"contactsWrapperSpace\":\"SortedPendingTasks_contactsWrapperSpace__JDLq+\",\"selected\":\"SortedPendingTasks_selected__mH8+g\",\"contactsDetailsHide\":\"SortedPendingTasks_contactsDetailsHide__zh1Sq\",\"contactsDetailsShow\":\"SortedPendingTasks_contactsDetailsShow__mr-6d\",\"closeModal\":\"SortedPendingTasks_closeModal__Z49UB\",\"contactsDetailsArea\":\"SortedPendingTasks_contactsDetailsArea__-KiZv\",\"contactImage\":\"SortedPendingTasks_contactImage__c4HP9\",\"detailsTitle\":\"SortedPendingTasks_detailsTitle__yyKqF\",\"detailsSection\":\"SortedPendingTasks_detailsSection__YiEPA\",\"detailsImageWrapper\":\"SortedPendingTasks_detailsImageWrapper__1PLqS\",\"detailsImage\":\"SortedPendingTasks_detailsImage__CW2fF\",\"detailsImageButton\":\"SortedPendingTasks_detailsImageButton__QhPm1\",\"detailsImageInput\":\"SortedPendingTasks_detailsImageInput__By2iY\",\"detailsSectionTitle\":\"SortedPendingTasks_detailsSectionTitle__+IcKF\",\"detailsWrapper\":\"SortedPendingTasks_detailsWrapper__TkUR9\",\"detailsItem\":\"SortedPendingTasks_detailsItem__-r3p3\",\"detailsCover\":\"SortedPendingTasks_detailsCover__MeP9S\",\"detailsInfo\":\"SortedPendingTasks_detailsInfo__F8NoU\",\"details\":\"SortedPendingTasks_details__1z--R\",\"detailsVal\":\"SortedPendingTasks_detailsVal__sCJZD\",\"detailsDetailsVal\":\"SortedPendingTasks_detailsDetailsVal__j+tbb\",\"detailsValPhone\":\"SortedPendingTasks_detailsValPhone__U59Pk\",\"detailsValInput\":\"SortedPendingTasks_detailsValInput__AJjzR\",\"detailsDetailsValInput\":\"SortedPendingTasks_detailsDetailsValInput__GGwfg\",\"detailsValInputPhone\":\"SortedPendingTasks_detailsValInputPhone__C+cze\",\"backDrop\":\"SortedPendingTasks_backDrop__qgnr7\",\"loader\":\"SortedPendingTasks_loader__Xsfvz\",\"detailButton\":\"SortedPendingTasks_detailButton__2FUQh\",\"buttonWrapper\":\"SortedPendingTasks_buttonWrapper__MprnN\",\"detailsEditClose\":\"SortedPendingTasks_detailsEditClose__FTYNV\",\"backdrop\":\"SortedPendingTasks_backdrop__DBYy0\",\"backdropIsHidden\":\"SortedPendingTasks_backdropIsHidden__FxUx0\",\"modalWindow\":\"SortedPendingTasks_modalWindow__CaEwB\"};","var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIcons(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.586 27.414l-10-10c-0.781-0.781-0.781-2.047 0-2.828l10-10c0.781-0.781 2.047-0.781 2.828 0s0.781 2.047 0 2.828l-6.586 6.586h19.172c1.105 0 2 0.895 2 2s-0.895 2-2 2h-19.172l6.586 6.586c0.39 0.39 0.586 0.902 0.586 1.414s-0.195 1.024-0.586 1.414c-0.781 0.781-2.047 0.781-2.828 0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-cross\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.708 25.708c0 0 0 0 0 0l-9.708-9.708 9.708-9.708c0 0 0 0 0 0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0 0 0 0 0l-9.708 9.708-9.708-9.708c0 0 0 0 0 0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c0 0 0 0 0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0 0 0 0 0 0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-enlarge\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 0h-13l5 5-6 6 3 3 6-6 5 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 32v-13l-5 5-6-6-3 3 6 6-5 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 32h13l-5-5 6-6-3-3-6 6-5-5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0v13l5-5 6 6 3-3-6-6 5-5z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-enlarge2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 0v13l-5-5-6 6-3-3 6-6-5-5zM14 21l-6 6 5 5h-13v-13l5 5 6-6z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pause\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13zM10 10h4v12h-4zM18 10h4v12h-4z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-play2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13zM12 9l12 7-12 7z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-play3\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 4l20 12-20 12z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-tv\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.662 9.003c-2.775-0.399-5.731-0.688-8.815-0.851l5.153-5.153-2-2-7.017 7.017c-0.656-0.011-1.317-0.017-1.983-0.017v0l-8-8-2 2 6.069 6.069c-3.779 0.133-7.386 0.454-10.731 0.935-0.86 3.366-1.338 7.086-1.338 10.997s0.477 7.63 1.338 10.997c4.489 0.645 9.448 1.003 14.662 1.003s10.173-0.358 14.662-1.003c0.86-3.366 1.338-7.086 1.338-10.997s-0.477-7.63-1.338-10.997zM26.997 27.331c-3.367 0.43-7.086 0.669-10.997 0.669s-7.63-0.239-10.997-0.669c-0.645-2.244-1.003-4.724-1.003-7.331s0.358-5.087 1.003-7.331c3.366-0.43 7.086-0.669 10.997-0.669s7.63 0.239 10.996 0.669c0.645 2.244 1.004 4.724 1.004 7.331s-0.358 5.087-1.003 7.331z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-volume-decrease\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 14h16v4h-16v-4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 30c-0.26 0-0.516-0.102-0.707-0.293l-7.707-7.707h-3.586c-0.552 0-1-0.448-1-1v-10c0-0.552 0.448-1 1-1h3.586l7.707-7.707c0.286-0.286 0.716-0.372 1.090-0.217s0.617 0.519 0.617 0.924v26c0 0.404-0.244 0.769-0.617 0.924-0.124 0.051-0.254 0.076-0.383 0.076z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-volume-increase\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 18h-6v6h-4v-6h-6v-4h6v-6h4v6h6v4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 30c-0.26 0-0.516-0.102-0.707-0.293l-7.707-7.707h-3.586c-0.552 0-1-0.448-1-1v-10c0-0.552 0.448-1 1-1h3.586l7.707-7.707c0.286-0.286 0.716-0.372 1.090-0.217s0.617 0.519 0.617 0.924v26c0 0.404-0.244 0.769-0.617 0.924-0.124 0.051-0.254 0.076-0.383 0.076z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-books\",\n    viewBox: \"0 0 36 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 4h-6c-0.55 0-1 0.45-1 1v22c0 0.55 0.45 1 1 1h6c0.55 0 1-0.45 1-1v-22c0-0.55-0.45-1-1-1zM6 10h-4v-2h4v2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 4h-6c-0.55 0-1 0.45-1 1v22c0 0.55 0.45 1 1 1h6c0.55 0 1-0.45 1-1v-22c0-0.55-0.45-1-1-1zM16 10h-4v-2h4v2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.909 5.546l-5.358 2.7c-0.491 0.247-0.691 0.852-0.443 1.343l8.999 17.861c0.247 0.491 0.852 0.691 1.343 0.443l5.358-2.7c0.491-0.247 0.691-0.852 0.443-1.343l-8.999-17.861c-0.247-0.491-0.852-0.691-1.343-0.443z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcons);\nexport default __webpack_public_path__ + \"static/media/icons.77c8d2ef0bd65aab65a1e4f05688514c.svg\";\nexport { ForwardRef as ReactComponent };","import { TasksPendingList } from '../TasksPendingList/TasksPendingList';\nimport { useEffect } from 'react';\nimport {\n  fetchContacts,\n  closeSortedPendingModal,\n  updateSortedPendingContactAvatar,\n  updateSortedPendingContactName,\n  updateSortedPendingContactEmail,\n  updateSortedPendingContactPhone,\n  closePendingMobileAndTabModal,\n} from '../../redux/AppRedux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport {\n  selectError,\n  selectIsLoading,\n  selectOpenSortedPendingModal,\n  selectedSortedPendingContact,\n  selectedIsSlideLoading,\n  selectOpenPendingMobileAndTabModal,\n} from '../../redux/AppRedux/selectors';\nimport css from './SortedPendingTasks.module.css';\nimport svg from './icons.svg';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport Flatpickr from 'react-flatpickr';\nimport 'flatpickr/dist/themes/material_blue.css';\nimport { useMediaQuery } from 'react-responsive';\n\n\nexport const Contacts = () => {\n   const [date, setDate] = useState(new Date());\n  const [isNameEditing, setNameEdit] = useState(false);\n  const [nameValue, setNameValue] = useState(\"\");\n  const [isEmailEditing, setEmailEdit] = useState(false);\n   const myContact = useSelector(selectedSortedPendingContact);\n  const [emailValue, setEmailValue] = useState(myContact.email);\n   const [isPhoneEditing, setPhoneEdit] = useState(false);\n   const [dateValue, setDateValue] = useState('');\n  //const [idValue, setIdValue] = useState('');\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const isOpenPendingMobileAndTabModal = useSelector(selectOpenPendingMobileAndTabModal);\n  //const contacts = useSelector(selectContacts);\n  const isSlideLoading = useSelector(selectedIsSlideLoading);\n \n  const error = useSelector(selectError);\n  const isDesktop = useMediaQuery({ query: '(min-width: 1280px)' });\n  const isMobileOrTab = useMediaQuery({ query: '(max-width: 1279px)' });\n   const isOpenModal = useSelector(selectOpenSortedPendingModal);\n const handleModalClose = () => {\n   dispatch(closeSortedPendingModal());\n   setNameEdit(false);\n   setEmailEdit(false);\n   dispatch(closePendingMobileAndTabModal());\n  };\n\n  const handleNameChange = evt => { \n    setNameValue(evt.target.value);\n      const wrd = evt.target.value;\n      let hasExceeded = false;\n      let nameRay;\n      if (wrd.length > 45) {\n        nameRay = [...wrd];\n        nameRay.pop();\n        evt.target.value = nameRay.join('');\n        hasExceeded = true;\n      }\n      if (hasExceeded === true) {\n        Notiflix.Notify.warning('Maximum Charater limit is 45');\n      }\n    /*const id = evt.currentTarget.getAttribute('data-id');\n    setIdValue(id);*/\n  }\n\n  const handleNameEdit = evt => { \n    setNameEdit(true);\n    //const input = document.getElementById('nameInput');\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n      const input = document.querySelector('[name=\"username\"]');\n      input.focus();\n    }, 100);\n  }\n\n  const handleNameSave = evt => {\n    \n     if (nameValue.trim() !== '') {\n       const idValue = evt.target.name;\n       dispatch(updateSortedPendingContactName({ name: nameValue, myUpdateId: idValue }));\n       setNameEdit(false);\n     } else if (nameValue.trim() === '') {\n       Notiflix.Notify.warning('Input is required');\n     }\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n  };\n  \n   const handleNameEditClose = () => {\n     setNameEdit(false);\n   };\n\n    const handleEmailChange = evt => {\n      setEmailValue(evt.target.value);\n      /*const id = evt.currentTarget.getAttribute('data-id');\n    setIdValue(id);*/\n      const wrd = evt.target.value;\n      let hasExceeded = false;\n      let nameRay;\n      if (wrd.length > 200) {\n        nameRay = [...wrd];\n        nameRay.pop();\n        evt.target.value = nameRay.join('');\n        hasExceeded = true;\n      }\n      if (hasExceeded === true) {\n        Notiflix.Notify.warning('Maximum Charater limit is 200');\n      }\n    };\n\n    const handleEmailEdit = evt => {\n      setEmailEdit(true);\n      evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n      setTimeout(() => {\n        evt.target.style.boxShadow = 'none';\n        const input = document.querySelector('[name=\"email\"]');\n        input.focus();\n      }, 100);\n  };\n\n   const handleEmailSave = evt => {\n     if (emailValue.trim() !== '') {\n       const idValue = evt.target.name;\n       dispatch(updateSortedPendingContactEmail({ email: emailValue, myUpdateId: idValue }));\n       setEmailEdit(false);\n     } else if (emailValue.trim() === '') {\n       Notiflix.Notify.warning('Input is required');\n     }\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n   };\n\n  const handleEmailEditClose = () => {\n    setEmailEdit(false);\n    setEmailValue(myContact.email);\n  }\n\n \n   const handlePhoneEdit = evt => {\n     setPhoneEdit(true);\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n       const input = document.querySelector('[name=\"date\"]');\n       input.focus();\n     }, 100);\n   };\n  \n  const handlePhoneSave = evt => {\n    /*if (phoneValue.trim() !== '') {*/\n    const idValue = evt.target.name;\n    const exactDate = new Date();\n    if (date <= exactDate) {\n      Notiflix.Notify.failure('Invalid date, choose a date in the future');\n    }\n    else{\n      dispatch(updateSortedPendingContactPhone({ phone: date, myUpdateId: idValue }));\n    }\n      setPhoneEdit(false);\n    \n    /*} else if (phoneValue.trim() === '') {\n      Notiflix.Notify.warning('Input is Empty or Incorrect');\n    }*/\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 500);\n  };\n \n  const handlePhoneEditClose = () => {\n    setPhoneEdit(false);\n  };\n  \n   const handleImageChange = e => {\n     const file = e.target.files[0];\n     const id = e.currentTarget.getAttribute('data-id');\n     //dispatch(updateAvatar({ avatar: file }));\n     //console.log({ avatar: file });\n     if (file) {\n       dispatch(updateSortedPendingContactAvatar({ myFile: file, myId: id })); // Store the file under the key \"avatar\"\n     }\n   };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setEmailValue(myContact.email);\n  }, [myContact.email]);\n\n   useEffect(() => {\n     setNameValue(myContact.name);\n   }, [myContact.name]);\n  \n     useEffect(() => {\n       //setPhoneValue(myContact.phone);\n       /*const date = new Date(myContact.phone);\n\n       const formattedDate = date.toLocaleDateString('en-GB', {\n         year: 'numeric',\n         month: '2-digit',\n         day: '2-digit',\n       });\n       setDateValue(formattedDate)*/\n\n       const userLocale = navigator.language; // e.g., \"en-US\" or \"fr-FR\"\n       const myDate = new Date(myContact.phone);\n\n      const formatter = new Intl.DateTimeFormat(userLocale, {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit', // Optional: include seconds\n        hour12: true, // Optional: use 12-hour clock (set to false for 24-hour clock)\n      });\n       setDateValue(formatter.format(myDate));\n        \n     }, [myContact.phone]);\n\n  //console.log(myVal);\n\n  return (\n    <div\n      className={clsx(css.coverWrapper, {\n        [css.contactsWrapperSpace]: isOpenModal && isDesktop,\n      })}\n    >\n      {isOpenModal && isMobileOrTab && (\n        <div\n          className={clsx(css.backdrop, {\n            [css.backdropIsHidden]: isOpenPendingMobileAndTabModal,\n          })}\n        >\n          <div className={css.modalWindow}>\n            {isSlideLoading && (\n              <div className={css.backDrop}>\n                <ThreeCircles\n                  visible={true}\n                  height=\"80\"\n                  width=\"80\"\n                  color=\"#9225ff\"\n                  radius=\"9\"\n                  ariaLabel=\"three-dots-loading\"\n                  wrapperStyle={{}}\n                  wrapperClass={css.loader}\n                />\n              </div>\n            )}\n            <button className={css.closeModal} onClick={handleModalClose}>\n              <svg width=\"10px\" height=\"10px\" className={css.modalIcon}>\n                <use href={`${svg}#icon-cross`}></use>\n              </svg>\n            </button>\n            <p className={css.detailsTitle}>CUSTOMER DETAILS</p>\n            <div className={css.detailsImageWrapper}>\n              <img\n                className={css.detailsImage}\n                src={`${myContact.avatarURL}`}\n                alt=\"Contact\"\n              />\n            </div>\n            <input\n              className={css.detailsImageButton}\n              type=\"file\"\n              accept=\"image/*\"\n              name=\"avatar\"\n              onChange={handleImageChange}\n              id=\"2\"\n              data-id={myContact._id}\n            />\n            <label className={css.detailsImageInput} htmlFor=\"2\">\n              Update Task Image +\n            </label>\n            <ul className={css.detailsWrapper}>\n              <li className={css.detailsItem}>\n                <span className={css.detailsCover}>\n                  <span className={css.detailsInfo}>\n                    <span className={css.details}>Name:</span>{' '}\n                    {isNameEditing === false ? (\n                      <span className={css.detailsVal}>\n                        <i className={css.detail}>{myContact.name}</i>\n                      </span>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className={css.detailsValInput}\n                        required\n                        onChange={handleNameChange}\n                        data-id={myContact._id}\n                        name=\"username\"\n                        defaultValue={myContact.name}\n                      />\n                    )}\n                  </span>\n                  <span className={css.buttonWrapper}>\n                    {isNameEditing === true && (\n                      <button\n                        className={css.detailsEditClose}\n                        onClick={handleNameEditClose}\n                      >\n                        <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                          <use href={`${svg}#icon-cross`}></use>\n                        </svg>\n                      </button>\n                    )}\n                    {isNameEditing === false ? (\n                      <button\n                        className={css.detailButton}\n                        onClick={handleNameEdit}\n                      >\n                        Edit\n                      </button>\n                    ) : (\n                      <button\n                        name={myContact._id}\n                        className={css.detailButton}\n                        onClick={handleNameSave}\n                      >\n                        Save\n                      </button>\n                    )}\n                  </span>\n                </span>\n              </li>\n              <li className={css.detailsItem}>\n                <span className={css.detailsCover}>\n                  <span className={css.detailsInfo}>\n                    <span className={css.details}>Booking Details:</span>{' '}\n                    {isEmailEditing === false ? (\n                      <pre className={css.detailsDetailsVal}>\n                        <i className={css.detail}>{myContact.email}</i>\n                        {console.log(myContact.email)}\n                      </pre>\n                    ) : (\n                      <textarea\n                        type=\"text\"\n                        className={css.detailsDetailsValInput}\n                        required\n                        onChange={handleEmailChange}\n                        data-id={myContact._id}\n                        name=\"email\"\n                        title=\"Enter the details of your task\"\n                        defaultValue={myContact.email}\n                      ></textarea>\n                    )}\n                  </span>\n                  <span className={css.buttonWrapper}>\n                    {isEmailEditing === true && (\n                      <button\n                        className={css.detailsEditClose}\n                        onClick={handleEmailEditClose}\n                      >\n                        <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                          <use href={`${svg}#icon-cross`}></use>\n                        </svg>\n                      </button>\n                    )}\n                    {isEmailEditing === false ? (\n                      <button\n                        className={css.detailButton}\n                        onClick={handleEmailEdit}\n                      >\n                        Edit\n                      </button>\n                    ) : (\n                      <button\n                        name={myContact._id}\n                        className={css.detailButton}\n                        onClick={handleEmailSave}\n                      >\n                        Save\n                      </button>\n                    )}\n                  </span>\n                </span>\n              </li>\n              <li className={css.detailsItem}>\n                <span className={css.detailsCover}>\n                  <span className={css.detailsInfo}>\n                    <span className={css.details}>Due Date:</span>{' '}\n                    {isPhoneEditing === false ? (\n                      <span className={css.detailsValPhone}>\n                        <i className={css.detail}>{dateValue}</i>\n                      </span>\n                    ) : (\n                      <Flatpickr\n                        data-enable-time\n                        value={date}\n                        onChange={selectedDates => {\n                          const nowDate = new Date();\n                          if (selectedDates[0] <= nowDate) {\n                            Notiflix.Notify.warning(\n                              'Choose a date in the future'\n                            );\n                          } else {\n                            Notiflix.Notify.success('Due Date Selected');\n                          }\n                          setDate(selectedDates[0]);\n                        }}\n                        options={{\n                          minuteIncrement: 1, // Set minute increments to 1\n                        }}\n                        render={({ defaultValue, ...props }, ref) => (\n                          <input\n                            {...props}\n                            ref={ref}\n                            className={css.detailsValInputPhone}\n                            required\n                            data-id={myContact._id}\n                            name=\"date\"\n                          />\n                        )}\n                      />\n                    )}\n                  </span>\n                  <span className={css.buttonWrapper}>\n                    {isPhoneEditing === true && (\n                      <button\n                        className={css.detailsEditClose}\n                        onClick={handlePhoneEditClose}\n                      >\n                        <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                          <use href={`${svg}#icon-cross`}></use>\n                        </svg>\n                      </button>\n                    )}\n                    {isPhoneEditing === false ? (\n                      <button\n                        className={css.detailButton}\n                        onClick={handlePhoneEdit}\n                      >\n                        Edit\n                      </button>\n                    ) : (\n                      <button\n                        name={myContact._id}\n                        className={css.detailButton}\n                        onClick={handlePhoneSave}\n                      >\n                        Save\n                      </button>\n                    )}\n                  </span>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n      <b\n        className={clsx(css.notification, {\n          [css.notificationShow]: isLoading && !error,\n        })}\n      >\n        Please wait...\n      </b>\n\n      {error && (\n        <b className={css.notificationShow}>\n          There was an error, logout and login again!!!\n        </b>\n      )}\n      <div\n        className={clsx(css.contactsDetailsHide, {\n          [css.contactsDetailsShow]: isOpenModal && isDesktop,\n        })}\n      >\n        {isSlideLoading && (\n          <div className={css.backDrop}>\n            <ThreeCircles\n              visible={true}\n              height=\"80\"\n              width=\"80\"\n              color=\"#9225ff\"\n              radius=\"9\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClass={css.loader}\n            />\n          </div>\n        )}\n        <button className={css.closeModal} onClick={handleModalClose}>\n          <svg width=\"10px\" height=\"10px\" className={css.modalIcon}>\n            <use href={`${svg}#icon-cross`}></use>\n          </svg>\n        </button>\n        <p className={css.detailsTitle}>CUSTOMER DETAILS</p>\n        <div className={css.detailsImageWrapper}>\n          <img\n            className={css.detailsImage}\n            src={myContact.avatarURL}\n            alt=\"Contact\"\n          />\n        </div>\n        <input\n          className={css.detailsImageButton}\n          type=\"file\"\n          accept=\"image/*\"\n          name=\"avatar\"\n          onChange={handleImageChange}\n          id=\"2\"\n          data-id={myContact._id}\n        />\n        <label className={css.detailsImageInput} htmlFor=\"2\">\n          Update Task Image +\n        </label>\n        <ul className={css.detailsWrapper}>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Name:</span>{' '}\n                {isNameEditing === false ? (\n                  <span className={css.detailsVal}>\n                    <i className={css.detail}>{myContact.name}</i>\n                  </span>\n                ) : (\n                  <input\n                    type=\"text\"\n                    className={css.detailsValInput}\n                    required\n                    onChange={handleNameChange}\n                    data-id={myContact._id}\n                    name=\"username\"\n                    defaultValue={myContact.name}\n                  />\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isNameEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handleNameEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isNameEditing === false ? (\n                  <button className={css.detailButton} onClick={handleNameEdit}>\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handleNameSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Booking Details:</span>{' '}\n                {isEmailEditing === false ? (\n                  <pre className={css.detailsDetailsVal}>\n                    <i className={css.detail}>{myContact.email}</i>\n                    {console.log(myContact.email)}\n                  </pre>\n                ) : (\n                  <textarea\n                    type=\"text\"\n                    className={css.detailsDetailsValInput}\n                    required\n                    onChange={handleEmailChange}\n                    data-id={myContact._id}\n                    name=\"email\"\n                    title=\"Enter the details of your task\"\n                    defaultValue={myContact.email}\n                  ></textarea>\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isEmailEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handleEmailEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isEmailEditing === false ? (\n                  <button\n                    className={css.detailButton}\n                    onClick={handleEmailEdit}\n                  >\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handleEmailSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Due Date:</span>{' '}\n                {isPhoneEditing === false ? (\n                  <span className={css.detailsValPhone}>\n                    <i className={css.detail}>{dateValue}</i>\n                  </span>\n                ) : (\n                  <Flatpickr\n                    data-enable-time\n                    value={date}\n                    onChange={selectedDates => {\n                      const nowDate = new Date();\n                      if (selectedDates[0] <= nowDate) {\n                        Notiflix.Notify.warning('Choose a date in the future');\n                      } else {\n                        Notiflix.Notify.success('Due Date Selected');\n                      }\n                      setDate(selectedDates[0]);\n                    }}\n                    options={{\n                      minuteIncrement: 1, // Set minute increments to 1\n                    }}\n                    render={({ defaultValue, ...props }, ref) => (\n                      <input\n                        {...props}\n                        ref={ref}\n                        className={css.detailsValInputPhone}\n                        required\n                        data-id={myContact._id}\n                        name=\"date\"\n                      />\n                    )}\n                  />\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isPhoneEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handlePhoneEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isPhoneEditing === false ? (\n                  <button\n                    className={css.detailButton}\n                    onClick={handlePhoneEdit}\n                  >\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handlePhoneSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n        </ul>\n      </div>\n      <div\n        className={clsx(css.sortedWrapper, {\n          [css.selected]: isOpenModal && isDesktop,\n        })}\n      >\n        <div></div>\n        <TasksPendingList />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","export const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectContactsFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectIsKeyLoading = state => state.contacts.contacts.isKeyLoading;\n\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectOpenModal = state => state.contacts.contacts.openMyModal;\n\nexport const selectOpenSortedAllModal = state => state.contacts.contacts.openMyAllModal;\n\nexport const selectOpenSortedPendingModal = state => state.contacts.contacts.openMyPendingModal;\n\nexport const selectOpenSortedCompletedModal = state => state.contacts.contacts.openMyCompletedModal;\n\nexport const selectOpenSortedPastDueModal = state => state.contacts.contacts.openMyPastDueModal;\n\nexport const selectedContact = state => state.contacts.contacts.selectedContact;\n\nexport const selectedSortedAllContact = state => state.contacts.contacts.selectedSortedAllContact;\n\nexport const selectedSortedPendingContact = state => state.contacts.contacts.selectedSortedPendingContact;\n\nexport const selectedSortedCompletedContact = state => state.contacts.contacts.selectedSortedCompletedContact;\n\nexport const selectedSortedPastDueContact = state => state.contacts.contacts.selectedSortedPastDueContact;\n\nexport const selectedIsSlideLoading = state => state.contacts.contacts.isSlideLoading;\n\nexport const selectedIsSlideError = state => state.contacts.contacts.isSlideError;\n\nexport const selectFilterUp = state => state.contacts.contacts.filterUpLimit;\n\nexport const selectFilterDown = state => state.contacts.contacts.filterDownLimit;\n\nexport const selectOpenMobileAndTabModal = state => state.contacts.contacts.openMyMobileAndTabModal;\n\nexport const selectOpenAllMobileAndTabModal = state => state.contacts.contacts.openMyAllMobileAndTabModal;\n\nexport const selectOpenPendingMobileAndTabModal = state => state.contacts.contacts.openMyPendingMobileAndTabModal;\n\nexport const selectOpenCompletedMobileAndTabModal = state => state.contacts.contacts.openMyCompletedMobileAndTabModal;\n\nexport const selectOpenPastDueMobileAndTabModal = state => state.contacts.contacts.openMyPastDueMobileAndTabModal;\n"],"names":["TasksPendingList","_ref","children","contacts","useSelector","selectContacts","filterDown","selectFilterUp","selectFilterDown","isLoading","selectIsLoading","error","selectError","dispatch","useDispatch","handleDelete","evt","target","style","boxShadow","setTimeout","deleteContact","name","filterValue","selectContactsFilter","handleModalOpen","getAttribute","id","currentTarget","fetchSortedPendingContactById","openSortedPendingModal","openPendingMobileAndTabModal","_useState","useState","_useState2","_slicedToArray","lowerLimit","setLowerLimit","_useState3","_useState4","upperLimit","setUpperLimit","handleBackward","handleChange","updateStatus","status","checked","myUpdateStatusId","pendingMatches","filter","contact","toLowerCase","includes","trim","_jsxs","className","css","_jsx","length","map","myindex","indexOf","_id","onClick","type","onChange","Contacts","Date","date","setDate","isNameEditing","setNameEdit","_useState5","_useState6","nameValue","setNameValue","_useState7","_useState8","isEmailEditing","setEmailEdit","myContact","selectedSortedPendingContact","_useState9","email","_useState10","emailValue","setEmailValue","_useState11","_useState12","isPhoneEditing","setPhoneEdit","_useState13","_useState14","dateValue","setDateValue","isOpenPendingMobileAndTabModal","selectOpenPendingMobileAndTabModal","isSlideLoading","selectedIsSlideLoading","isDesktop","useMediaQuery","query","isMobileOrTab","isOpenModal","selectOpenSortedPendingModal","handleModalClose","closeSortedPendingModal","closePendingMobileAndTabModal","handleNameChange","value","nameRay","wrd","hasExceeded","_toConsumableArray","pop","join","Notiflix","handleNameEdit","document","querySelector","focus","handleNameSave","idValue","updateSortedPendingContactName","myUpdateId","handleNameEditClose","handleEmailChange","handleEmailEdit","handleEmailSave","updateSortedPendingContactEmail","handleEmailEditClose","handlePhoneEdit","handlePhoneSave","exactDate","updateSortedPendingContactPhone","phone","handlePhoneEditClose","handleImageChange","e","file","files","updateSortedPendingContactAvatar","myFile","myId","useEffect","fetchContacts","userLocale","navigator","language","myDate","formatter","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","format","clsx","_defineProperty","ThreeCircles","visible","height","width","color","radius","ariaLabel","wrapperStyle","wrapperClass","href","concat","svg","src","avatarURL","alt","accept","htmlFor","required","defaultValue","console","log","title","Flatpickr","selectedDates","nowDate","options","minuteIncrement","render","ref","props","_objectWithoutProperties","_excluded","_objectSpread","_ref2","_excluded2","state","items","selectOpenModal","openMyModal","selectOpenSortedAllModal","openMyAllModal","openMyPendingModal","selectOpenSortedCompletedModal","openMyCompletedModal","selectOpenSortedPastDueModal","openMyPastDueModal","selectedContact","selectedSortedAllContact","selectedSortedCompletedContact","selectedSortedPastDueContact","filterUpLimit","filterDownLimit","selectOpenMobileAndTabModal","openMyMobileAndTabModal","selectOpenAllMobileAndTabModal","openMyAllMobileAndTabModal","openMyPendingMobileAndTabModal","selectOpenCompletedMobileAndTabModal","openMyCompletedMobileAndTabModal","selectOpenPastDueMobileAndTabModal","openMyPastDueMobileAndTabModal"],"sourceRoot":""}