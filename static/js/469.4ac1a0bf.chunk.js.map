{"version":3,"file":"static/js/469.4ac1a0bf.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/TasksAllList/TasksAllList.module.css?fbf6","components/TasksAllList/TasksAllList.jsx","webpack://react-homework-template/./src/components/SortedAllTasks/SortedAllTasks.module.css?7eb5","components/SortedAllTasks/icons.svg","components/SortedAllTasks/SortedAllTasks.jsx","redux/AppRedux/selectors.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formLabel\":\"Filter_formLabel__Ozoh5\",\"formInput\":\"Filter_formInput__XNLZn\",\"contactsSection\":\"Filter_contactsSection__lb9Ll\",\"contactsTitle\":\"Filter_contactsTitle__eTnDx\",\"contactsList\":\"Filter_contactsList__78f6h\",\"contactsData\":\"Filter_contactsData__q4ogS\",\"contactsPhone\":\"Filter_contactsPhone__hxyN-\",\"contactsItemWrapper\":\"Filter_contactsItemWrapper__-Mxdd\",\"contactsItem\":\"Filter_contactsItem__CHFiw\",\"contactsDetails\":\"Filter_contactsDetails__0UF-g\",\"contactsName\":\"Filter_contactsName__gRaQA\",\"checkbox\":\"Filter_checkbox__wp-8y\",\"contactsButtonArea\":\"Filter_contactsButtonArea__0a5PO\",\"contactsButton\":\"Filter_contactsButton__7e+W-\",\"navigationArea\":\"Filter_navigationArea__OTHql\",\"navigationButton\":\"Filter_navigationButton__xNnWu\"};","import { useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/AppRedux/selectors';\nimport {\n  selectContactsFilter,\n  selectFilterUp,\n  selectFilterDown\n} from '../../redux/AppRedux/selectors';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport css from './Filter.module.css';\nimport { setFilter } from '../../redux/AppRedux/filterSlice';\nimport {\n  deleteContact,\n  openModal,\n  fetchContactById,\n  openMobileAndTabModal,\n  updateStatus,\n} from '../../redux/AppRedux/operations';\n\nexport const Filter = () => {\n  const searchTermId = nanoid();\n  const contacts = useSelector(selectContacts);\n  const filterUpper = useSelector(selectFilterUp);\n  const filterLower = useSelector(selectFilterDown);\n  const filterValue = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n  const handleSearch = event => {\n    dispatch(setFilter(event.target.value));\n    console.log(event.target.value);\n  };\n  const bestMatches = contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(filterValue.trim().toLowerCase()) &&\n      filterValue.trim() !== ''\n  );\n\n  const handleModalOpen = evt => {\n    if (evt.target.getAttribute('data-id')) {\n      const id = evt.currentTarget.getAttribute('data-id');\n      dispatch(fetchContactById(id));\n      dispatch(openModal());\n      dispatch(openMobileAndTabModal());\n    }\n  };\n\n  const handleDelete = evt => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 1000);\n    dispatch(deleteContact(evt.target.name));\n  };\n\n   const handleChange = (evt) => {\n      dispatch(updateStatus({ status: evt.target.checked, myUpdateStatusId:evt.target.name}));\n    }\n\n  return (\n    <div className={css.contactList}>\n      <label htmlFor={searchTermId}>\n        <span className={css.formLabel}>Search Appointments By Title:</span>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Task title\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Enter Task Title\"\n          required\n          onChange={handleSearch}\n          id={searchTermId}\n          autoComplete=\"off\"\n          className={css.formInput}\n          value={filterValue}\n        />\n      </label>\n\n      {filterValue !== '' && bestMatches.length !== 0 && (\n        <ul className={css.contactsList}>\n          {bestMatches.map(contact => {\n            const myindex = bestMatches.indexOf(contact);\n            if (myindex >= filterLower && myindex < filterUpper) {\n              return (\n                <li\n                  key={contact._id}\n                  data-id={contact._id}\n                  className={css.contactsItem}\n                  onClick={handleModalOpen}\n                >\n                  <span className={css.contactsData} data-id={contact._id}>\n                    <input\n                      type=\"checkbox\"\n                      className={css.checkbox}\n                      checked={contact.status}\n                      name={contact._id}\n                      onChange={handleChange}\n                    />\n                    :{' '}\n                    <span className={css.contactsPhone} data-id={contact._id}>\n                      {contact.name}\n                    </span>\n                  </span>\n                  <span className={css.contactsButtonArea}>\n                    <button\n                      type=\"submit\"\n                      className={css.contactsButton}\n                      name={contact._id}\n                      onClick={handleDelete}\n                    >\n                      Delete\n                    </button>\n                  </span>\n                </li>\n              );\n            }\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsSection\":\"TasksAllList_contactsSection__SLU5x\",\"contactsTitle\":\"TasksAllList_contactsTitle__Df6LH\",\"contactsList\":\"TasksAllList_contactsList__nLH7q\",\"contactsListAlt\":\"TasksAllList_contactsListAlt__cTlyT\",\"contactsData\":\"TasksAllList_contactsData__GlBzz\",\"contactsPhone\":\"TasksAllList_contactsPhone__Zk3IP\",\"contactsItemWrapper\":\"TasksAllList_contactsItemWrapper__NfNnm\",\"contactsItem\":\"TasksAllList_contactsItem__H+Hvg\",\"contactsDetails\":\"TasksAllList_contactsDetails__mCdwK\",\"contactsName\":\"TasksAllList_contactsName__aJ5XR\",\"checkbox\":\"TasksAllList_checkbox__BGmks\",\"contactsButtonArea\":\"TasksAllList_contactsButtonArea__QeU-g\",\"contactsButton\":\"TasksAllList_contactsButton__CKE1T\",\"navigationArea\":\"TasksAllList_navigationArea__-III2\",\"navigationButton\":\"TasksAllList_navigationButton__8UbqN\"};","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { selectContacts } from '../../redux/AppRedux/selectors';\nimport {\n  selectContactsFilter,\n  selectFilterUp,\n  selectFilterDown,\n  selectError,\n  selectIsLoading,\n} from '../../redux/AppRedux/selectors';\nimport {\n  deleteContact,\n  openSortedAllModal,\n  fetchSortedAllContactById,\n  handleFilterFowardUp,\n  handleFilterFowardDown,\n  handleFilterBackwardUp,\n  handleFilterBackwardDown,\n  updateStatus,\n  openAllMobileAndTabModal,\n} from '../../redux/AppRedux/operations';\nimport css from './TasksAllList.module.css';\nexport const TasksAllList = ({ children }) => {\n  const contacts = useSelector(selectContacts);\n  const filterUp = useSelector(selectFilterUp);\n  const filterDown = useSelector(selectFilterDown);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  //const [taskStatus, setTaskStatus] = useState();\n  //let myContacts  \n  const dispatch = useDispatch();\n  const handleDelete = evt => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 1000);\n    //console.log(evt.target.name);\n    dispatch(deleteContact(evt.target.name));\n    /*//dispatch(closeModal());\n    const exist = contacts.find(contact => contact._id === evt.target.name);\n    console.log(contacts);\n    if (exist === undefined) {\n      console.log('gvghi');\n      dispatch(closeModal());\n    }*/\n    \n  };\n  const filterValue = useSelector(selectContactsFilter);\n\n  const handleModalOpen = (evt) => {\n    if (evt.target.getAttribute('data-id')) {\n      //console.log('Modal opened!');\n\n      const id = evt.currentTarget.getAttribute('data-id');\n      //console.log(id);\n      dispatch(fetchSortedAllContactById(id));\n      dispatch(openSortedAllModal());\n      dispatch(openAllMobileAndTabModal());\n    }\n  };\n  const [lowerLimit, setLowerLimit] = useState(0);\n  const [upperLimit, setUpperLimit] = useState(4);\n\n\n  const handleForward = (evt) => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 500);\n    //let fwdWar = lowerLimit + 4;\n    \n      setLowerLimit(lowerLimit + 4);\n      setUpperLimit(upperLimit + 4);\n    \n    /*if (filterValue !== \"\") {\n      console.log(\"OK\")\n      const str = filterUp;\n      const sto = filterDown\n      dispatch(handleFilterFowardUp(str));\n      dispatch(handleFilterFowardDown(sto));\n    }*/\n  }\n\n  const handleBackward = (evt) => {\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n    //let fwdWar = lowerLimit + 4;\n    \n      setLowerLimit(lowerLimit - 4);\n      setUpperLimit(upperLimit - 4);\n    \n    /*if (filterValue !== '') {\n      const str1 = filterUp;\n      const sto1 = filterDown;\n       dispatch(handleFilterBackwardUp(str1));\n       dispatch(handleFilterBackwardDown(sto1));\n     }*/\n  };\n  \n  const handleChange = (evt) => {\n    dispatch(updateStatus({ status: evt.target.checked, myUpdateStatusId:evt.target.name}));\n  }\n  \n   const bestMatches = contacts.filter(\n     contact =>\n       contact.name.toLowerCase().includes(filterValue.trim().toLowerCase()) &&\n       filterValue.trim() !== ''\n   );\n\n  return (\n    <div className={css.contactsSection}>\n      <h3 className={css.contactsTitle}>All</h3>\n      {children}\n      {contacts.length === 0 && (\n        <div className={css.contactsListAlt}>\n          {isLoading && !error && (\n            <b className={css.notification}>Loading Tasks...</b>\n          )}\n          {!isLoading && !error && (\n            <b className={css.notification}>No Tasks Here!!!</b>\n          )}\n          {!isLoading && error && (\n            <b className={css.notification}>Error!!!</b>\n          )}\n        </div>\n      )}\n      {contacts.length !== 0 && (\n        <ul className={css.contactsList}>\n          {contacts.map(contact => {\n            const myindex = contacts.indexOf(contact);\n            if (myindex >= lowerLimit && myindex < upperLimit) {\n              return (\n                <li\n                  key={contact._id}\n                  data-id={contact._id}\n                  className={css.contactsItem}\n                  onClick={handleModalOpen}\n                >\n                  <span className={css.contactsData} data-id={contact._id}>\n                    <input\n                      type=\"checkbox\"\n                      className={css.checkbox}\n                      checked={contact.status}\n                      name={contact._id}\n                      onChange={handleChange}\n                    />\n                    :{' '}\n                    <span className={css.contactsPhone} data-id={contact._id}>\n                      {contact.name}\n                    </span>\n                  </span>\n                  <span className={css.contactsButtonArea}>\n                    <button\n                      type=\"submit\"\n                      className={css.contactsButton}\n                      name={contact._id}\n                      onClick={handleDelete}\n                    >\n                      Delete\n                    </button>\n                  </span>\n                </li>\n              );\n            }\n          })}\n        </ul>\n      )}\n\n      <div className={css.navigationArea}>\n        {lowerLimit !== 0 && (\n          <button className={css.navigationButton} onClick={handleBackward}>\n            Prev\n          </button>\n        )}\n        {!(upperLimit > contacts.length) && upperLimit !== contacts.length && (\n          <button className={css.navigationButton} onClick={handleForward}>\n            Forward\n          </button>\n        )}\n      </div>\n\n      {/*filterValue !== '' && (\n        <div className={css.navigationArea}>\n          {filterDown !== 0 && (\n            <button className={css.navigationButton} onClick={handleBackward}>\n              Prev\n            </button>\n          )}\n          {!(filterUp > bestMatches.length) &&\n            filterUp !== bestMatches.length && (\n              <button className={css.navigationButton} onClick={handleForward}>\n                Forward\n              </button>\n            )}\n        </div>\n      )*/}\n    </div>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"notification\":\"SortedAllTasks_notification__PE5ue\",\"notificationShow\":\"SortedAllTasks_notificationShow__0Uo+7\",\"sortedWrapper\":\"SortedAllTasks_sortedWrapper__JQcmu\",\"coverWrapper\":\"SortedAllTasks_coverWrapper__igPNu\",\"contactsWrapperSpace\":\"SortedAllTasks_contactsWrapperSpace__m3nDv\",\"selected\":\"SortedAllTasks_selected__22XDH\",\"contactsDetailsHide\":\"SortedAllTasks_contactsDetailsHide__RxppC\",\"contactsDetailsShow\":\"SortedAllTasks_contactsDetailsShow__-V64X\",\"closeModal\":\"SortedAllTasks_closeModal__xyTkV\",\"contactsDetailsArea\":\"SortedAllTasks_contactsDetailsArea__8HnkJ\",\"contactImage\":\"SortedAllTasks_contactImage__Fie04\",\"detailsTitle\":\"SortedAllTasks_detailsTitle__4JTqy\",\"detailsSection\":\"SortedAllTasks_detailsSection__5B9ca\",\"detailsImageWrapper\":\"SortedAllTasks_detailsImageWrapper__35P-0\",\"detailsImage\":\"SortedAllTasks_detailsImage__loLob\",\"detailsImageButton\":\"SortedAllTasks_detailsImageButton__EZ7Rb\",\"detailsImageInput\":\"SortedAllTasks_detailsImageInput__kNgXa\",\"detailsSectionTitle\":\"SortedAllTasks_detailsSectionTitle__W9Ljh\",\"detailsWrapper\":\"SortedAllTasks_detailsWrapper__rqyWl\",\"detailsItem\":\"SortedAllTasks_detailsItem__+LBl+\",\"detailsCover\":\"SortedAllTasks_detailsCover__zg+ol\",\"detailsInfo\":\"SortedAllTasks_detailsInfo__vQzBI\",\"details\":\"SortedAllTasks_details__5ssan\",\"detailsVal\":\"SortedAllTasks_detailsVal__BoKEM\",\"detailsDetailsVal\":\"SortedAllTasks_detailsDetailsVal__Lo8wG\",\"detailsValPhone\":\"SortedAllTasks_detailsValPhone__BNXcB\",\"detailsValInput\":\"SortedAllTasks_detailsValInput__+19JH\",\"detailsDetailsValInput\":\"SortedAllTasks_detailsDetailsValInput__CIw3H\",\"detailsValInputPhone\":\"SortedAllTasks_detailsValInputPhone__xqxhR\",\"backDrop\":\"SortedAllTasks_backDrop__kRRhf\",\"loader\":\"SortedAllTasks_loader__DemPs\",\"detailButton\":\"SortedAllTasks_detailButton__z0tJj\",\"buttonWrapper\":\"SortedAllTasks_buttonWrapper__e1tLl\",\"detailsEditClose\":\"SortedAllTasks_detailsEditClose__mq7Su\",\"backdrop\":\"SortedAllTasks_backdrop__a2czd\",\"backdropIsHidden\":\"SortedAllTasks_backdropIsHidden__HljMl\",\"modalWindow\":\"SortedAllTasks_modalWindow__43xxB\"};","var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIcons(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.586 27.414l-10-10c-0.781-0.781-0.781-2.047 0-2.828l10-10c0.781-0.781 2.047-0.781 2.828 0s0.781 2.047 0 2.828l-6.586 6.586h19.172c1.105 0 2 0.895 2 2s-0.895 2-2 2h-19.172l6.586 6.586c0.39 0.39 0.586 0.902 0.586 1.414s-0.195 1.024-0.586 1.414c-0.781 0.781-2.047 0.781-2.828 0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-cross\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.708 25.708c0 0 0 0 0 0l-9.708-9.708 9.708-9.708c0 0 0 0 0 0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0 0 0 0 0l-9.708 9.708-9.708-9.708c0 0 0 0 0 0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c0 0 0 0 0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0 0 0 0 0 0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-enlarge\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 0h-13l5 5-6 6 3 3 6-6 5 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 32v-13l-5 5-6-6-3 3 6 6-5 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 32h13l-5-5 6-6-3-3-6 6-5-5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0v13l5-5 6 6 3-3-6-6 5-5z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-enlarge2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 0v13l-5-5-6 6-3-3 6-6-5-5zM14 21l-6 6 5 5h-13v-13l5 5 6-6z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pause\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13zM10 10h4v12h-4zM18 10h4v12h-4z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-play2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13zM12 9l12 7-12 7z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-play3\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 4l20 12-20 12z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-tv\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.662 9.003c-2.775-0.399-5.731-0.688-8.815-0.851l5.153-5.153-2-2-7.017 7.017c-0.656-0.011-1.317-0.017-1.983-0.017v0l-8-8-2 2 6.069 6.069c-3.779 0.133-7.386 0.454-10.731 0.935-0.86 3.366-1.338 7.086-1.338 10.997s0.477 7.63 1.338 10.997c4.489 0.645 9.448 1.003 14.662 1.003s10.173-0.358 14.662-1.003c0.86-3.366 1.338-7.086 1.338-10.997s-0.477-7.63-1.338-10.997zM26.997 27.331c-3.367 0.43-7.086 0.669-10.997 0.669s-7.63-0.239-10.997-0.669c-0.645-2.244-1.003-4.724-1.003-7.331s0.358-5.087 1.003-7.331c3.366-0.43 7.086-0.669 10.997-0.669s7.63 0.239 10.996 0.669c0.645 2.244 1.004 4.724 1.004 7.331s-0.358 5.087-1.003 7.331z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-volume-decrease\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 14h16v4h-16v-4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 30c-0.26 0-0.516-0.102-0.707-0.293l-7.707-7.707h-3.586c-0.552 0-1-0.448-1-1v-10c0-0.552 0.448-1 1-1h3.586l7.707-7.707c0.286-0.286 0.716-0.372 1.090-0.217s0.617 0.519 0.617 0.924v26c0 0.404-0.244 0.769-0.617 0.924-0.124 0.051-0.254 0.076-0.383 0.076z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-volume-increase\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 18h-6v6h-4v-6h-6v-4h6v-6h4v6h6v4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 30c-0.26 0-0.516-0.102-0.707-0.293l-7.707-7.707h-3.586c-0.552 0-1-0.448-1-1v-10c0-0.552 0.448-1 1-1h3.586l7.707-7.707c0.286-0.286 0.716-0.372 1.090-0.217s0.617 0.519 0.617 0.924v26c0 0.404-0.244 0.769-0.617 0.924-0.124 0.051-0.254 0.076-0.383 0.076z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-books\",\n    viewBox: \"0 0 36 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 4h-6c-0.55 0-1 0.45-1 1v22c0 0.55 0.45 1 1 1h6c0.55 0 1-0.45 1-1v-22c0-0.55-0.45-1-1-1zM6 10h-4v-2h4v2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 4h-6c-0.55 0-1 0.45-1 1v22c0 0.55 0.45 1 1 1h6c0.55 0 1-0.45 1-1v-22c0-0.55-0.45-1-1-1zM16 10h-4v-2h4v2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.909 5.546l-5.358 2.7c-0.491 0.247-0.691 0.852-0.443 1.343l8.999 17.861c0.247 0.491 0.852 0.691 1.343 0.443l5.358-2.7c0.491-0.247 0.691-0.852 0.443-1.343l-8.999-17.861c-0.247-0.491-0.852-0.691-1.343-0.443z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcons);\nexport default __webpack_public_path__ + \"static/media/icons.77c8d2ef0bd65aab65a1e4f05688514c.svg\";\nexport { ForwardRef as ReactComponent };","import { TasksAllList } from '../TasksAllList/TasksAllList';\nimport { Filter } from '../Filter/Filter';\nimport { useEffect } from 'react';\nimport {\n  fetchContacts,\n  closeSortedAllModal,\n  updateSortedAllContactAvatar,\n  updateSortedAllContactName,\n  updateSortedAllContactEmail,\n  updateSortedAllContactPhone,\n  closeAllMobileAndTabModal,\n} from '../../redux/AppRedux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport {\n  selectError,\n  selectIsLoading,\n  selectOpenSortedAllModal,\n  selectedSortedAllContact,\n  selectedIsSlideLoading,\n  selectOpenAllMobileAndTabModal,\n} from '../../redux/AppRedux/selectors';\nimport css from './SortedAllTasks.module.css';\nimport svg from './icons.svg';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport Flatpickr from 'react-flatpickr';\nimport 'flatpickr/dist/themes/material_blue.css';\nimport { Suspense } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { useRef } from 'react';\n\nexport const Contacts = () => {\n  const myRef = useRef();\n   const [date, setDate] = useState(new Date());\n  const [isNameEditing, setNameEdit] = useState(false);\n  const [nameValue, setNameValue] = useState(\"\");\n  const [isEmailEditing, setEmailEdit] = useState(false);\n   const myContact = useSelector(selectedSortedAllContact);\n  const [emailValue, setEmailValue] = useState(myContact.email);\n   const [isPhoneEditing, setPhoneEdit] = useState(false);\n   const [dateValue, setDateValue] = useState('');\n  //const [idValue, setIdValue] = useState('');\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const isOpenAllMobileAndTabModal = useSelector(selectOpenAllMobileAndTabModal);\n  //const contacts = useSelector(selectContacts);\n  const isSlideLoading = useSelector(selectedIsSlideLoading);\n \n  const error = useSelector(selectError);\n  const isDesktop = useMediaQuery({ query: '(min-width: 1280px)' });\n  const isMobileOrTab = useMediaQuery({ query: '(max-width: 1279px)' });\n   const isOpenModal = useSelector(selectOpenSortedAllModal);\n const handleModalClose = () => {\n   dispatch(closeSortedAllModal());\n   setNameEdit(false);\n   setEmailEdit(false);\n   dispatch(closeAllMobileAndTabModal());\n  };\n\n  const handleNameChange = evt => { \n    setNameValue(evt.target.value);\n      const wrd = evt.target.value;\n      let hasExceeded = false;\n      let nameRay;\n      if (wrd.length > 45) {\n        nameRay = [...wrd];\n        nameRay.pop();\n        evt.target.value = nameRay.join('');\n        hasExceeded = true;\n      }\n      if (hasExceeded === true) {\n        Notiflix.Notify.warning('Maximum Charater limit is 45');\n      }\n    /*const id = evt.currentTarget.getAttribute('data-id');\n    setIdValue(id);*/\n  }\n\n  const handleNameEdit = evt => { \n    setNameEdit(true);\n    //const input = document.getElementById('nameInput');\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n      const input = document.querySelector('[name=\"username\"]');\n      input.focus();\n    }, 100);\n  }\n\n  const handleNameSave = evt => {\n    \n     if (nameValue.trim() !== '') {\n       const idValue = evt.target.name;\n       dispatch(updateSortedAllContactName({ name: nameValue, myUpdateId: idValue }));\n       setNameEdit(false);\n     } else if (nameValue.trim() === '') {\n       Notiflix.Notify.warning('Input is required');\n     }\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n  };\n  \n   const handleNameEditClose = () => {\n     setNameEdit(false);\n   };\n\n    const handleEmailChange = evt => {\n      setEmailValue(evt.target.value);\n      /*const id = evt.currentTarget.getAttribute('data-id');\n    setIdValue(id);*/\n      const wrd = evt.target.value;\n      let hasExceeded = false;\n      let nameRay;\n      if (wrd.length > 200) {\n        nameRay = [...wrd];\n        nameRay.pop();\n        evt.target.value = nameRay.join('');\n        hasExceeded = true;\n      }\n      if (hasExceeded === true) {\n        Notiflix.Notify.warning('Maximum Charater limit is 200');\n      }\n    };\n\n    const handleEmailEdit = evt => {\n      setEmailEdit(true);\n      evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n      setTimeout(() => {\n        evt.target.style.boxShadow = 'none';\n        const input = document.querySelector('[name=\"email\"]');\n        input.focus();\n      }, 100);\n  };\n\n   const handleEmailSave = evt => {\n     if (emailValue.trim() !== '') {\n       const idValue = evt.target.name;\n       dispatch(updateSortedAllContactEmail({ email: emailValue, myUpdateId: idValue }));\n       setEmailEdit(false);\n     } else if (emailValue.trim() === '') {\n       Notiflix.Notify.warning('Input is required');\n     }\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n   };\n\n  const handleEmailEditClose = () => {\n    setEmailEdit(false);\n    setEmailValue(myContact.email);\n  }\n\n \n   const handlePhoneEdit = evt => {\n     setPhoneEdit(true);\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n       const input = document.querySelector('[name=\"date\"]');\n       input.focus();\n     }, 100);\n   };\n  \n  const handlePhoneSave = evt => {\n    /*if (phoneValue.trim() !== '') {*/\n    const idValue = evt.target.name;\n    const exactDate = new Date();\n    if (date <= exactDate) {\n      Notiflix.Notify.failure('Invalid date, choose a date in the future');\n    }\n    else{\n      dispatch(updateSortedAllContactPhone({ phone: date, myUpdateId: idValue }));\n    }\n      setPhoneEdit(false);\n    \n    /*} else if (phoneValue.trim() === '') {\n      Notiflix.Notify.warning('Input is Empty or Incorrect');\n    }*/\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 500);\n  };\n \n  const handlePhoneEditClose = () => {\n    setPhoneEdit(false);\n  };\n  \n   const handleImageChange = e => {\n     const file = e.target.files[0];\n     const id = e.currentTarget.getAttribute('data-id');\n     //dispatch(updateAvatar({ avatar: file }));\n     //console.log({ avatar: file });\n     if (file) {\n       dispatch(updateSortedAllContactAvatar({ myFile: file, myId: id })); // Store the file under the key \"avatar\"\n     }\n     myRef.current.value = '';\n   };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setEmailValue(myContact.email);\n  }, [myContact.email]);\n\n   useEffect(() => {\n     setNameValue(myContact.name);\n   }, [myContact.name]);\n  \n     useEffect(() => {\n       //setPhoneValue(myContact.phone);\n       /*const date = new Date(myContact.phone);\n\n       const formattedDate = date.toLocaleDateString('en-GB', {\n         year: 'numeric',\n         month: '2-digit',\n         day: '2-digit',\n       });\n       setDateValue(formattedDate)*/\n\n       const userLocale = navigator.language; // e.g., \"en-US\" or \"fr-FR\"\n       const myDate = new Date(myContact.phone);\n\n      const formatter = new Intl.DateTimeFormat(userLocale, {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit', // Optional: include seconds\n        hour12: true, // Optional: use 12-hour clock (set to false for 24-hour clock)\n      });\n       setDateValue(formatter.format(myDate));\n        \n     }, [myContact.phone]);\n\n  //console.log(myVal);\n\n  return (\n    <div\n      className={clsx(css.coverWrapper, {\n        [css.contactsWrapperSpace]: isOpenModal && isDesktop,\n      })}\n    >\n      {isOpenModal && isMobileOrTab && (\n        <div\n          className={clsx(css.backdrop, {\n            [css.backdropIsHidden]: isOpenAllMobileAndTabModal,\n          })}\n        >\n          <div className={css.modalWindow}>\n            {isSlideLoading && (\n              <div className={css.backDrop}>\n                <ThreeCircles\n                  visible={true}\n                  height=\"80\"\n                  width=\"80\"\n                  color=\"#9225ff\"\n                  radius=\"9\"\n                  ariaLabel=\"three-dots-loading\"\n                  wrapperStyle={{}}\n                  wrapperClass={css.loader}\n                />\n              </div>\n            )}\n            <button className={css.closeModal} onClick={handleModalClose}>\n              <svg width=\"10px\" height=\"10px\" className={css.modalIcon}>\n                <use href={`${svg}#icon-cross`}></use>\n              </svg>\n            </button>\n            <p className={css.detailsTitle}>CUSTOMER DETAILS</p>\n            <div className={css.detailsImageWrapper}>\n              <img\n                className={css.detailsImage}\n                src={`${myContact.avatarURL}`}\n                alt=\"Contact\"\n              />\n            </div>\n            <input\n              className={css.detailsImageButton}\n              type=\"file\"\n              accept=\"image/*\"\n              name=\"avatar\"\n              ref={myRef}\n              onChange={handleImageChange}\n              id=\"2\"\n              data-id={myContact._id}\n            />\n            <label className={css.detailsImageInput} htmlFor=\"2\">\n              Update Task Image +\n            </label>\n            <ul className={css.detailsWrapper}>\n              <li className={css.detailsItem}>\n                <span className={css.detailsCover}>\n                  <span className={css.detailsInfo}>\n                    <span className={css.details}>Name:</span>{' '}\n                    {isNameEditing === false ? (\n                      <span className={css.detailsVal}>\n                        <i className={css.detail}>{myContact.name}</i>\n                      </span>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className={css.detailsValInput}\n                        required\n                        onChange={handleNameChange}\n                        data-id={myContact._id}\n                        name=\"username\"\n                        defaultValue={myContact.name}\n                      />\n                    )}\n                  </span>\n                  <span className={css.buttonWrapper}>\n                    {isNameEditing === true && (\n                      <button\n                        className={css.detailsEditClose}\n                        onClick={handleNameEditClose}\n                      >\n                        <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                          <use href={`${svg}#icon-cross`}></use>\n                        </svg>\n                      </button>\n                    )}\n                    {isNameEditing === false ? (\n                      <button\n                        className={css.detailButton}\n                        onClick={handleNameEdit}\n                      >\n                        Edit\n                      </button>\n                    ) : (\n                      <button\n                        name={myContact._id}\n                        className={css.detailButton}\n                        onClick={handleNameSave}\n                      >\n                        Save\n                      </button>\n                    )}\n                  </span>\n                </span>\n              </li>\n              <li className={css.detailsItem}>\n                <span className={css.detailsCover}>\n                  <span className={css.detailsInfo}>\n                    <span className={css.details}>Booking Details:</span>{' '}\n                    {isEmailEditing === false ? (\n                      <pre className={css.detailsDetailsVal}>\n                        <i className={css.detail}>{myContact.email}</i>\n                        {console.log(myContact.email)}\n                      </pre>\n                    ) : (\n                      <textarea\n                        type=\"text\"\n                        className={css.detailsDetailsValInput}\n                        required\n                        onChange={handleEmailChange}\n                        data-id={myContact._id}\n                        name=\"email\"\n                        title=\"Enter the details of your task\"\n                        defaultValue={myContact.email}\n                      ></textarea>\n                    )}\n                  </span>\n                  <span className={css.buttonWrapper}>\n                    {isEmailEditing === true && (\n                      <button\n                        className={css.detailsEditClose}\n                        onClick={handleEmailEditClose}\n                      >\n                        <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                          <use href={`${svg}#icon-cross`}></use>\n                        </svg>\n                      </button>\n                    )}\n                    {isEmailEditing === false ? (\n                      <button\n                        className={css.detailButton}\n                        onClick={handleEmailEdit}\n                      >\n                        Edit\n                      </button>\n                    ) : (\n                      <button\n                        name={myContact._id}\n                        className={css.detailButton}\n                        onClick={handleEmailSave}\n                      >\n                        Save\n                      </button>\n                    )}\n                  </span>\n                </span>\n              </li>\n              <li className={css.detailsItem}>\n                <span className={css.detailsCover}>\n                  <span className={css.detailsInfo}>\n                    <span className={css.details}>Due Date:</span>{' '}\n                    {isPhoneEditing === false ? (\n                      <span className={css.detailsValPhone}>\n                        <i className={css.detail}>{dateValue}</i>\n                      </span>\n                    ) : (\n                      <Flatpickr\n                        data-enable-time\n                        value={date}\n                        onChange={selectedDates => {\n                          const nowDate = new Date();\n                          if (selectedDates[0] <= nowDate) {\n                            Notiflix.Notify.warning(\n                              'Choose a date in the future'\n                            );\n                          } else {\n                            Notiflix.Notify.success('Due Date Selected');\n                          }\n                          setDate(selectedDates[0]);\n                        }}\n                        options={{\n                          minuteIncrement: 1, // Set minute increments to 1\n                        }}\n                        render={({ defaultValue, ...props }, ref) => (\n                          <input\n                            {...props}\n                            ref={ref}\n                            className={css.detailsValInputPhone}\n                            required\n                            data-id={myContact._id}\n                            name=\"date\"\n                          />\n                        )}\n                      />\n                    )}\n                  </span>\n                  <span className={css.buttonWrapper}>\n                    {isPhoneEditing === true && (\n                      <button\n                        className={css.detailsEditClose}\n                        onClick={handlePhoneEditClose}\n                      >\n                        <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                          <use href={`${svg}#icon-cross`}></use>\n                        </svg>\n                      </button>\n                    )}\n                    {isPhoneEditing === false ? (\n                      <button\n                        className={css.detailButton}\n                        onClick={handlePhoneEdit}\n                      >\n                        Edit\n                      </button>\n                    ) : (\n                      <button\n                        name={myContact._id}\n                        className={css.detailButton}\n                        onClick={handlePhoneSave}\n                      >\n                        Save\n                      </button>\n                    )}\n                  </span>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n      <b\n        className={clsx(css.notification, {\n          [css.notificationShow]: isLoading && !error,\n        })}\n      >\n        Please wait...\n      </b>\n\n      {error && (\n        <b className={css.notificationShow}>\n          There was an error, logout and login again!!!\n        </b>\n      )}\n      <div\n        className={clsx(css.contactsDetailsHide, {\n          [css.contactsDetailsShow]: isOpenModal && isDesktop,\n        })}\n      >\n        {isSlideLoading && (\n          <div className={css.backDrop}>\n            <ThreeCircles\n              visible={true}\n              height=\"80\"\n              width=\"80\"\n              color=\"#9225ff\"\n              radius=\"9\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClass={css.loader}\n            />\n          </div>\n        )}\n        <button className={css.closeModal} onClick={handleModalClose}>\n          <svg width=\"10px\" height=\"10px\" className={css.modalIcon}>\n            <use href={`${svg}#icon-cross`}></use>\n          </svg>\n        </button>\n        <p className={css.detailsTitle}>CUSTOMER DETAILS</p>\n        <div className={css.detailsImageWrapper}>\n          <img\n            className={css.detailsImage}\n            src={myContact.avatarURL}\n            alt=\"Contact\"\n          />\n        </div>\n        <input\n          className={css.detailsImageButton}\n          type=\"file\"\n          accept=\"image/*\"\n          name=\"avatar\"\n          ref={myRef}\n          onChange={handleImageChange}\n          id=\"2\"\n          data-id={myContact._id}\n        />\n        <label className={css.detailsImageInput} htmlFor=\"2\">\n          Update Task Image +\n        </label>\n        <ul className={css.detailsWrapper}>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Name:</span>{' '}\n                {isNameEditing === false ? (\n                  <span className={css.detailsVal}>\n                    <i className={css.detail}>{myContact.name}</i>\n                  </span>\n                ) : (\n                  <input\n                    type=\"text\"\n                    className={css.detailsValInput}\n                    required\n                    onChange={handleNameChange}\n                    data-id={myContact._id}\n                    name=\"username\"\n                    defaultValue={myContact.name}\n                  />\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isNameEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handleNameEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isNameEditing === false ? (\n                  <button className={css.detailButton} onClick={handleNameEdit}>\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handleNameSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Booking Details:</span>{' '}\n                {isEmailEditing === false ? (\n                  <pre className={css.detailsDetailsVal}>\n                    <i className={css.detail}>{myContact.email}</i>\n                    {console.log(myContact.email)}\n                  </pre>\n                ) : (\n                  <textarea\n                    type=\"text\"\n                    className={css.detailsDetailsValInput}\n                    required\n                    onChange={handleEmailChange}\n                    data-id={myContact._id}\n                    name=\"email\"\n                    title=\"Enter the details of your task\"\n                    defaultValue={myContact.email}\n                  ></textarea>\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isEmailEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handleEmailEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isEmailEditing === false ? (\n                  <button\n                    className={css.detailButton}\n                    onClick={handleEmailEdit}\n                  >\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handleEmailSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Due Date:</span>{' '}\n                {isPhoneEditing === false ? (\n                  <span className={css.detailsValPhone}>\n                    <i className={css.detail}>{dateValue}</i>\n                  </span>\n                ) : (\n                  <Flatpickr\n                    data-enable-time\n                    value={date}\n                    onChange={selectedDates => {\n                      const nowDate = new Date();\n                      if (selectedDates[0] <= nowDate) {\n                        Notiflix.Notify.warning('Choose a date in the future');\n                      } else {\n                        Notiflix.Notify.success('Due Date Selected');\n                      }\n                      setDate(selectedDates[0]);\n                    }}\n                    options={{\n                      minuteIncrement: 1, // Set minute increments to 1\n                    }}\n                    render={({ defaultValue, ...props }, ref) => (\n                      <input\n                        {...props}\n                        ref={ref}\n                        className={css.detailsValInputPhone}\n                        required\n                        data-id={myContact._id}\n                        name=\"date\"\n                      />\n                    )}\n                  />\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isPhoneEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handlePhoneEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isPhoneEditing === false ? (\n                  <button\n                    className={css.detailButton}\n                    onClick={handlePhoneEdit}\n                  >\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handlePhoneSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n        </ul>\n      </div>\n      <div\n        className={clsx(css.sortedWrapper, {\n          [css.selected]: isOpenModal && isDesktop,\n        })}\n      >\n        <div></div>\n        <TasksAllList />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","export const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectContactsFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectIsKeyLoading = state => state.contacts.contacts.isKeyLoading;\n\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectOpenModal = state => state.contacts.contacts.openMyModal;\n\nexport const selectOpenSortedAllModal = state => state.contacts.contacts.openMyAllModal;\n\nexport const selectOpenSortedPendingModal = state => state.contacts.contacts.openMyPendingModal;\n\nexport const selectOpenSortedCompletedModal = state => state.contacts.contacts.openMyCompletedModal;\n\nexport const selectOpenSortedPastDueModal = state => state.contacts.contacts.openMyPastDueModal;\n\nexport const selectedContact = state => state.contacts.contacts.selectedContact;\n\nexport const selectedSortedAllContact = state => state.contacts.contacts.selectedSortedAllContact;\n\nexport const selectedSortedPendingContact = state => state.contacts.contacts.selectedSortedPendingContact;\n\nexport const selectedSortedCompletedContact = state => state.contacts.contacts.selectedSortedCompletedContact;\n\nexport const selectedSortedPastDueContact = state => state.contacts.contacts.selectedSortedPastDueContact;\n\nexport const selectedIsSlideLoading = state => state.contacts.contacts.isSlideLoading;\n\nexport const selectedIsSlideError = state => state.contacts.contacts.isSlideError;\n\nexport const selectFilterUp = state => state.contacts.contacts.filterUpLimit;\n\nexport const selectFilterDown = state => state.contacts.contacts.filterDownLimit;\n\nexport const selectOpenMobileAndTabModal = state => state.contacts.contacts.openMyMobileAndTabModal;\n\nexport const selectOpenAllMobileAndTabModal = state => state.contacts.contacts.openMyAllMobileAndTabModal;\n\nexport const selectOpenPendingMobileAndTabModal = state => state.contacts.contacts.openMyPendingMobileAndTabModal;\n\nexport const selectOpenCompletedMobileAndTabModal = state => state.contacts.contacts.openMyCompletedMobileAndTabModal;\n\nexport const selectOpenPastDueMobileAndTabModal = state => state.contacts.contacts.openMyPastDueMobileAndTabModal;\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["Filter","searchTermId","nanoid","contacts","useSelector","selectContacts","filterUpper","selectFilterUp","filterLower","selectFilterDown","filterValue","selectContactsFilter","dispatch","useDispatch","bestMatches","filter","contact","name","toLowerCase","includes","trim","handleModalOpen","evt","target","getAttribute","id","currentTarget","fetchContactById","openModal","openMobileAndTabModal","handleDelete","style","boxShadow","setTimeout","deleteContact","handleChange","updateStatus","status","checked","myUpdateStatusId","_jsxs","className","css","children","htmlFor","_jsx","type","placeholder","pattern","title","required","onChange","event","setFilter","value","console","log","autoComplete","length","map","myindex","indexOf","_id","onClick","TasksAllList","_ref","isLoading","selectIsLoading","error","selectError","fetchSortedAllContactById","openSortedAllModal","openAllMobileAndTabModal","_useState","useState","_useState2","_slicedToArray","lowerLimit","setLowerLimit","_useState3","_useState4","upperLimit","setUpperLimit","Contacts","myRef","useRef","Date","date","setDate","isNameEditing","setNameEdit","_useState5","_useState6","nameValue","setNameValue","_useState7","_useState8","isEmailEditing","setEmailEdit","myContact","selectedSortedAllContact","_useState9","email","_useState10","emailValue","setEmailValue","_useState11","_useState12","isPhoneEditing","setPhoneEdit","_useState13","_useState14","dateValue","setDateValue","isOpenAllMobileAndTabModal","selectOpenAllMobileAndTabModal","isSlideLoading","selectedIsSlideLoading","isDesktop","useMediaQuery","query","isMobileOrTab","isOpenModal","selectOpenSortedAllModal","handleModalClose","closeSortedAllModal","closeAllMobileAndTabModal","handleNameChange","nameRay","wrd","hasExceeded","_toConsumableArray","pop","join","Notiflix","handleNameEdit","document","querySelector","focus","handleNameSave","idValue","updateSortedAllContactName","myUpdateId","handleNameEditClose","handleEmailChange","handleEmailEdit","handleEmailSave","updateSortedAllContactEmail","handleEmailEditClose","handlePhoneEdit","handlePhoneSave","exactDate","updateSortedAllContactPhone","phone","handlePhoneEditClose","handleImageChange","e","file","files","updateSortedAllContactAvatar","myFile","myId","current","useEffect","fetchContacts","userLocale","navigator","language","myDate","formatter","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","format","clsx","_defineProperty","ThreeCircles","visible","height","width","color","radius","ariaLabel","wrapperStyle","wrapperClass","href","concat","svg","src","avatarURL","alt","accept","ref","defaultValue","Flatpickr","selectedDates","nowDate","options","minuteIncrement","render","props","_objectWithoutProperties","_excluded","_objectSpread","_ref2","_excluded2","state","items","selectOpenModal","openMyModal","openMyAllModal","selectOpenSortedPendingModal","openMyPendingModal","selectOpenSortedCompletedModal","openMyCompletedModal","selectOpenSortedPastDueModal","openMyPastDueModal","selectedContact","selectedSortedPendingContact","selectedSortedCompletedContact","selectedSortedPastDueContact","filterUpLimit","filterDownLimit","selectOpenMobileAndTabModal","openMyMobileAndTabModal","openMyAllMobileAndTabModal","selectOpenPendingMobileAndTabModal","openMyPendingMobileAndTabModal","selectOpenCompletedMobileAndTabModal","openMyCompletedMobileAndTabModal","selectOpenPastDueMobileAndTabModal","openMyPastDueMobileAndTabModal","size","arguments","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}